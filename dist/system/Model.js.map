{"version":3,"sources":["../../app/system/Model.js"],"names":["Model","connection","table","fields","where","field","value","sql","_","each","values","push","toString","join","execute","data","ignore","setVal","val","fld","condition","connectdb","conn","queryAsync","res","close","destroy","console","log","Database","module","exports"],"mappings":"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","file":"Model.js","sourcesContent":["import Database from './Database'\r\nimport _ from 'lodash'\r\nimport trim from 'trim'\r\nclass Model extends Database {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t}\r\n\t/**\r\n\t\t@param connection string \r\n\t\t@param table string \r\n\t\t@param fields string \r\n\t\t@param where json \r\n\t*/\r\n\tasync select(connection,table,fields='*',where=\"\"){\r\n\t\tlet field = [], value = [],\r\n\t\tsql = `SELECT ${fields} FROM ${table} `\r\n\t\tif(where != \"\"){\r\n\t\t\tawait _.each(where, function(values,fields){\r\n\t\t\t\tfield.push(fields + ' = ?')\r\n\t\t\t\tvalue.push(trim(values.toString()))\r\n\t\t\t})\r\n\t\t\tsql += `WHERE ${field.join(' AND ')}`\r\n\t\t}\r\n\t\treturn await this.execute(connection,sql,value)\r\n\t}\r\n\t/**\r\n\t\t@param connection string \r\n\t\t@param table string \r\n\t\t@param data json \r\n\t\t@param ignore boolean \r\n\t*/\r\n\tasync insert(connection,table,data,ignore=false){\r\n\t\tlet field = [], setVal = [], values = []\r\n\t\tawait _.each(data, function(val, fld){\r\n\t\t\tfield.push(fld)\r\n\t\t\tsetVal.push('?')\t\t\t\r\n\t\t\tvalues.push(trim(val.toString()))\t\t\t\r\n\t\t})\r\n\t\tlet sql = `INSERT ${(ignore == false) ? \"\" : \"IGNORE\"} INTO ${table} (${field.join(',')}) VALUES (${setVal})`\r\n\t\treturn await this.execute(connection, sql, values)\r\n\t}\r\n\t/**\r\n\t\t@param connection string \r\n\t\t@param table string \r\n\t\t@param condition json \r\n\t\t@param data json \r\n\t*/\r\n\tasync update(connection,table,condition,data){\r\n\t\tlet field = [], setVal = [], values = [], where=[]\r\n\t\tawait _.each(data, function(val, fld){\r\n\t\t\tfield.push(fld + \" = ?\")\r\n\t\t\tvalues.push(val)\t\t\t\r\n\t\t})\r\n\t\tawait _.each(condition, function(val, fld){\r\n\t\t\twhere.push(fld + ' = ?')\r\n\t\t\tvalues.push(trim(val.toString())) \t\t\t\r\n\t\t})\r\n\t\tlet sql = `UPDATE ${table} SET ${field.join(',')} WHERE ${where.join(' AND ')}`\r\n\t\treturn await this.execute(connection, sql, values)\r\n\t}\r\n\t/**\r\n\t\t@param connection string \r\n\t\t@param table string \r\n\t\t@param condition array \r\n\t*/\r\n\tasync delete(connection, table, condition){\r\n\t\tlet where =[], values = [];\r\n\t\tawait _.each(condition, function(val, fld){\r\n\t\t\twhere.push(fld + ' = ?');\r\n\t\t\tvalues.push(trim(val.toString()));\r\n\t  \t});\r\n\t  \tlet sql = `DELETE FROM ${table} WHERE ${where.join(' AND ')}`\r\n\t\treturn await this.execute(connection, sql, values)\r\n\t}\r\n\t/**\r\n\t\t@param connection string \r\n\t\t@param sql string \r\n\t\t@param values array \r\n\t*/\r\n\tasync query(connection,sql,values=null){\r\n\t\treturn await this.execute(connection,sql,values)\r\n\t}\r\n\t/**\r\n\t\t@param connection string \r\n\t\t@param sql string \r\n\t\t@param value array \r\n\t*/\r\n\tasync execute(connection,sql,value=null){\r\n\t\ttry{\r\n\t\t\tlet conn = await this.connectdb(connection)\r\n\t\t\tif(value == null){\r\n\t\t\t\tlet res = await conn[0].queryAsync(sql) //mssql\r\n\t\t\t\tconn[1].close()\r\n\t\t\t\treturn res\r\n\t\t\t}else{\r\n\t\t\t\tlet res =  await conn.queryAsync(sql,value) //mysql\r\n\t\t\t\tawait conn.destroy();\r\n\t\t\t\treturn res\r\n\t\t\t}\r\n\t\t}catch(err){\r\n\t\t\tconsole.log(err)\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = Model"]}