{"version":3,"sources":["../../app/system/Database.js"],"names":["Database","db","mydb","msdb","host","user","password","database","transaction","connjson","conn","connection","result","beginTransactionAsync","msConnJson","msconnection","bluebird","promisifyAll","mysql","createConnection","transactions","mssql","sql","ConnectionPool","connect","pool","request","Promise","all","Transaction","begin","Request","requests","connms","server","options","abortTransactionOnError","connectionLimit","queueLimit","acquireTimeout","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IACMA,Q;;;;;;;;;QAEWC,E,uEAAG,I;;;;;cACfA,MAAM,I;;;;;sBACDA,E;wCAED,S,uBAEA,M,uBAGA,Q;;;;;eALwB,KAAKC,IAAL,CAAU,WAAV,EAAsB,MAAtB,EAA6B,cAA7B,EAA4C,MAA5C,C;;;;;;;eAEH,KAAKA,IAAL,CAAU,WAAV,EAAsB,MAAtB,EAA6B,cAA7B,EAA4C,MAA5C,C;;;;;;;eAGE,KAAKC,IAAL,CAAU,eAAV,EAA0B,UAA1B,EAAqC,OAArC,EAA6C,WAA7C,C;;;;;;;;;;;;;;;;;;;;;;0GAMpBC,I,EAAKC,I,EAAKC,Q,EAASC,Q;QAASC,W,uEAAY,I;;;;;;;eACjC,KAAKC,QAAL,CAAcL,IAAd,EAAmBC,IAAnB,EAAwBC,QAAxB,EAAiCC,QAAjC,C;;;AAAbG,Y;;eACW,KAAKC,UAAL,CAAgBD,IAAhB,C;;;AAAfE,c;;cACGJ,eAAe,I;;;;;0CACVI,M;;;;eAEFA,OAAOC,qBAAP,E;;;0CACCD,M;;;;;;;;;;;;;;;;;;;0GAGGR,I,EAAKC,I,EAAKC,Q,EAASC,Q;QAASC,W,uEAAY,I;;;;;;;eACjC,KAAKM,UAAL,CAAgBV,IAAhB,EAAqBC,IAArB,EAA0BC,QAA1B,EAAmCC,QAAnC,C;;;AAAbG,Y;;eACS,KAAKK,YAAL,CAAkBL,IAAlB,EAAuBF,WAAvB,C;;;;;;;;;;;;;;;;;;;;;;0GAGGE,I;;;;;0CACTM,mBAASC,YAAT,CAAsBC,gBAAMC,gBAAN,CAAuBT,IAAvB,CAAtB,C;;;;;;;;;;;;;;;;;;;0GAGWA,I,EAAKU,Y;;;;;;;AACnBC,a,GAAQL,mBAASC,YAAT,CAAsBK,eAAtB,C;;eACC,IAAID,MAAME,cAAV,CAAyBb,IAAzB,EAA+Bc,OAA/B,E;;;AAAbC,Y;;cACGL,gBAAgB,I;;;;;;eACEK,KAAKC,OAAL,E;;;AAAhBA,e;;eACWC,kBAAQC,GAAR,CAAY,CAACF,OAAD,EAAUD,IAAV,CAAZ,C;;;AAAfb,e;0CACOA,O;;;;eAGgB,IAAIS,MAAMQ,WAAV,CAAsBJ,IAAtB,C;;;AAApBjB,mB;;eACEA,YAAYsB,KAAZ,E;;;;eACgB,IAAIT,MAAMU,OAAV,CAAkBvB,WAAlB,C;;;AAAlBwB,gB;;eACWL,kBAAQC,GAAR,CAAY,CAACI,QAAD,EAAWxB,WAAX,CAAZ,C;;;AAAfI,c;0CACOA,M;;;;;;;;;;;;;;;;;;;0GAISR,I,EAAKC,I,EAAKC,Q,EAASC,Q;;;;;;AAC/B0B,c,GAAS;AACZ5B,eAAMA,IADM;AAEZC,mBAAUA,QAFE;AAGZ4B,iBAAQ9B,IAHI;AAIZG,mBAAUA,QAJE;AAKZ4B,kBAAS;AACRC,mCAAyB,IADjB,CACsB;AADtB;AALG,S;0CASNH,M;;;;;;;;;;;;;;;;;;;0GAGO7B,I,EAAKC,I,EAAKC,Q,EAASC,Q;;;;;0CAC1B;AACNH,eAAMA,IADA;AAENC,eAAMA,IAFA;AAGNC,mBAAUA,QAHJ;AAINC,mBAAUA,QAJJ;AAKN8B,0BAAiB,IALX;AAMNC,qBAAY,CAAC,CANP,EAMUC,gBAAgB;AAN1B,S;;;;;;;;;;;;;;;;;;;;AAYTC,OAAOC,OAAP,GAAiBzC,QAAjB","file":"Database.js","sourcesContent":["'use strict'\r\nimport bluebird from 'bluebird'\r\nimport mysql from 'mysql' \r\nimport sql from 'mssql'\r\nimport Promise from 'promise'\r\nclass Database  {\r\n\r\n\tasync connectdb(db=null){\r\n\t\tif(db != null){\r\n\t\t\tswitch(db){\r\n\t\t\t\t//default connection \r\n\t\t\t\tcase 'default': return await this.mydb(\"localhost\",\"root\",\"password!@#$\",'test')\r\n\t\t\t\t//mysql\r\n\t\t\t\tcase 'srsn': return await this.mydb(\"localhost\",\"root\",\"password!@#$\",\"test\")\r\n\t\t\t\tbreak;\r\n\t\t\t\t//mssql\r\n\t\t\t\tcase 'srsnms': return await this.msdb(\"192.168.0.148\",\"markuser\",\"tseug\",\"NOVA_JADE\")\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync mydb(host,user,password,database,transaction=null){\r\n\t\tlet conn = await this.connjson(host,user,password,database),\r\n\t\tresult = await this.connection(conn)\r\n\t\tif(transaction == null){\r\n\t\t\treturn result\r\n\t\t}\r\n\t\tawait result.beginTransactionAsync()\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync msdb(host,user,password,database,transaction=null){\r\n\t\tlet conn = await this.msConnJson(host,user,password,database)\r\n\t\treturn await this.msconnection(conn,transaction)\r\n\t}\r\n\r\n\tasync connection(conn){\r\n\t\treturn bluebird.promisifyAll(mysql.createConnection(conn))\r\n\t}\r\n\r\n\tasync msconnection(conn,transactions){\r\n\t\tlet mssql = bluebird.promisifyAll(sql)\r\n\t\tpool = await new mssql.ConnectionPool(conn).connect()\r\n\t\tif(transactions == null){\r\n\t\t\tlet request = await pool.request(),\r\n\t\t\tresult = await Promise.all([request, pool])\r\n\t\t\treturn result\r\n\t\t}\r\n\t\t//for rollback transaction\r\n\t\tlet transaction = await new mssql.Transaction(pool)\r\n\t\tawait transaction.begin()\r\n\t\tlet requests =  await new mssql.Request(transaction),\r\n\t\tresult = await Promise.all([requests, transaction])\r\n\t\treturn result\r\n\t\t\t\r\n\t}\r\n\r\n\tasync msConnJson(host,user,password,database){\r\n\t\tlet connms = {\r\n\t\t\tuser: user,\r\n\t\t\tpassword: password,\r\n\t\t\tserver: host, \r\n\t\t\tdatabase: database,\r\n\t\t\toptions: {\r\n\t\t\t\tabortTransactionOnError: true // <-- SET XACT_ABORT ON\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn connms\r\n\t}\r\n\r\n\tasync connjson(host,user,password,database){\r\n\t\treturn { \r\n\t\t\thost: host,\r\n\t\t\tuser: user,\r\n\t\t\tpassword: password,\r\n\t\t\tdatabase: database,\r\n\t\t\tconnectionLimit: 1000,\r\n\t\t\tqueueLimit: -1, acquireTimeout: 2\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nmodule.exports = Database"]}